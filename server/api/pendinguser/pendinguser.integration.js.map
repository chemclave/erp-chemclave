{"version":3,"sources":["../../../../server/api/pendinguser/pendinguser.integration.js"],"names":["app","require","newPendinguser","describe","pendingusers","beforeEach","done","get","expect","end","err","res","body","it","to","be","instanceOf","Array","post","send","name","info","equal","pendinguser","_id","afterEach","updatedPendinguser","put","delete"],"mappings":"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","file":"pendinguser.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newPendinguser;\n\ndescribe('Pendinguser API:', function() {\n\n  describe('GET /api/pendingusers', function() {\n    var pendingusers;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/pendingusers')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          pendingusers = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(pendingusers).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/pendingusers', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/pendingusers')\n        .send({\n          name: 'New Pendinguser',\n          info: 'This is the brand new pendinguser!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newPendinguser = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created pendinguser', function() {\n      expect(newPendinguser.name).to.equal('New Pendinguser');\n      expect(newPendinguser.info).to.equal('This is the brand new pendinguser!!!');\n    });\n\n  });\n\n  describe('GET /api/pendingusers/:id', function() {\n    var pendinguser;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/pendingusers/' + newPendinguser._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          pendinguser = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      pendinguser = {};\n    });\n\n    it('should respond with the requested pendinguser', function() {\n      expect(pendinguser.name).to.equal('New Pendinguser');\n      expect(pendinguser.info).to.equal('This is the brand new pendinguser!!!');\n    });\n\n  });\n\n  describe('PUT /api/pendingusers/:id', function() {\n    var updatedPendinguser;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/pendingusers/' + newPendinguser._id)\n        .send({\n          name: 'Updated Pendinguser',\n          info: 'This is the updated pendinguser!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPendinguser = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPendinguser = {};\n    });\n\n    it('should respond with the updated pendinguser', function() {\n      expect(updatedPendinguser.name).to.equal('Updated Pendinguser');\n      expect(updatedPendinguser.info).to.equal('This is the updated pendinguser!!!');\n    });\n\n  });\n\n  describe('DELETE /api/pendingusers/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/pendingusers/' + newPendinguser._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when pendinguser does not exist', function(done) {\n      request(app)\n        .delete('/api/pendingusers/' + newPendinguser._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}