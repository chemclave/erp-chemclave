{"version":3,"sources":["../../../../server/api/thing/index.spec.js"],"names":["proxyquire","require","noPreserveCache","thingCtrlStub","index","show","create","update","destroy","routerStub","get","sinon","spy","put","patch","post","delete","thingIndex","Router","describe","it","expect","to","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,gBAAgB;AAClBC,SAAO,iBADW;AAElBC,QAAM,gBAFY;AAGlBC,UAAQ,kBAHU;AAIlBC,UAAQ,kBAJU;AAKlBC,WAAS;AALS,CAApB;;AAQA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,SAAOH,MAAMC,GAAN,EAHQ;AAIfG,QAAMJ,MAAMC,GAAN,EAJS;AAKfI,UAAQL,MAAMC,GAAN;AALO,CAAjB;;AAQA;AACA,IAAIK,aAAajB,WAAW,YAAX,EAAyB;AACxC,aAAW;AACTkB,YAAQ,kBAAW;AACjB,aAAOT,UAAP;AACD;AAHQ,GAD6B;AAMxC,wBAAsBN;AANkB,CAAzB,CAAjB;;AASAgB,SAAS,mBAAT,EAA8B,YAAW;;AAEvCC,KAAG,0CAAH,EAA+C,YAAW;AACxDC,WAAOJ,UAAP,EAAmBK,EAAnB,CAAsBC,KAAtB,CAA4Bd,UAA5B;AACD,GAFD;;AAIAU,WAAS,iBAAT,EAA4B,YAAW;;AAErCC,OAAG,wCAAH,EAA6C,YAAW;AACtDC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,GADL,EACU,iBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,qBAAT,EAAgC,YAAW;;AAEzCC,OAAG,uCAAH,EAA4C,YAAW;AACrDC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,MADL,EACa,gBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,kBAAT,EAA6B,YAAW;;AAEtCC,OAAG,yCAAH,EAA8C,YAAW;AACvDC,aAAOZ,WAAWM,IAAX,CACJS,QADI,CACK,GADL,EACU,kBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,qBAAT,EAAgC,YAAW;;AAEzCC,OAAG,yCAAH,EAA8C,YAAW;AACvDC,aAAOZ,WAAWI,GAAX,CACJW,QADI,CACK,MADL,EACa,kBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,uBAAT,EAAkC,YAAW;;AAE3CC,OAAG,yCAAH,EAA8C,YAAW;AACvDC,aAAOZ,WAAWK,KAAX,CACJU,QADI,CACK,MADL,EACa,kBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,wBAAT,EAAmC,YAAW;;AAE5CC,OAAG,0CAAH,EAA+C,YAAW;AACxDC,aAAOZ,WAAWO,MAAX,CACJQ,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar thingCtrlStub = {\n  index: 'thingCtrl.index',\n  show: 'thingCtrl.show',\n  create: 'thingCtrl.create',\n  update: 'thingCtrl.update',\n  destroy: 'thingCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar thingIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './thing.controller': thingCtrlStub\n});\n\ndescribe('Thing API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(thingIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/things', function() {\n\n    it('should route to thing.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'thingCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/things/:id', function() {\n\n    it('should route to thing.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'thingCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/things', function() {\n\n    it('should route to thing.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'thingCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/things/:id', function() {\n\n    it('should route to thing.controller.update', function() {\n      expect(routerStub.put\n        .withArgs('/:id', 'thingCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/things/:id', function() {\n\n    it('should route to thing.controller.update', function() {\n      expect(routerStub.patch\n        .withArgs('/:id', 'thingCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/things/:id', function() {\n\n    it('should route to thing.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'thingCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}